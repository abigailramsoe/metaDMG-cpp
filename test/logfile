#../metaDMG-cpp getdamage -r 0 ./data/f570b1db7c.dedup.filtered.rname.bam -o output/test1 
./metaDMG-cpp refName: (null) minLength: 35 printLength: 5 runmode: 0 outname: output/test1 nthreads: 4
skipping: f570b1db7c_000000000023 too short, this msg is printed 2 times more 
skipping: f570b1db7c_000000000084 too short, this msg is printed 1 times more 
skipping: f570b1db7c_000000000084 too short, this msg is printed 0 times more 
	-> Will dump: 'output/test1.res.gz' this contains damage patterns for: 1 items
	-> Setting threads to: 4 
	-> Will dump: 'output/test1.bdamage.gz' this contains damage patterns for: 1 items
	-> Setting threads to: 4 
	-> Outputting overall statistic in file: "output/test1.stat"
pos	A>C	A>G	A>T	C>A	C>G	C>T	G>A	G>C	G>T	T>A	T>C	T>G
0	0.00290	0.01246	0.00620	0.00261	0.00598	0.36531	0.01530	0.00885	0.01339	0.00150	0.00710	0.00187
1	0.00257	0.01448	0.00227	0.00312	0.00939	0.15060	0.01411	0.00771	0.00413	0.00290	0.01080	0.00462
2	0.00212	0.01187	0.00164	0.00344	0.00665	0.08565	0.01122	0.00659	0.00276	0.00186	0.01045	0.00327
3	0.00211	0.00962	0.00157	0.00251	0.00464	0.06546	0.01217	0.00575	0.00332	0.00174	0.00802	0.00187
4	0.00357	0.01324	0.00169	0.00199	0.00645	0.03854	0.01022	0.00607	0.00294	0.00153	0.01030	0.00328
pos	A>C	A>G	A>T	C>A	C>G	C>T	G>A	G>C	G>T	T>A	T>C	T>G
0	0.00260	0.01173	0.00329	0.00449	0.00825	0.23102	0.01332	0.00894	0.00703	0.00303	0.00944	0.00278
1	0.00171	0.01114	0.00159	0.00360	0.00735	0.12823	0.01134	0.00743	0.00437	0.00244	0.01134	0.00303
2	0.00285	0.01419	0.00207	0.00372	0.00754	0.08257	0.01076	0.00585	0.00324	0.00211	0.01239	0.00316
3	0.00254	0.01132	0.00116	0.00322	0.00741	0.05755	0.01085	0.00602	0.00216	0.00228	0.01084	0.00309
4	0.00161	0.01076	0.00145	0.00307	0.00598	0.04327	0.01000	0.00659	0.00268	0.00169	0.01209	0.00266
#../metaDMG-cpp getdamage -r 1 ./data/f570b1db7c.dedup.filtered.rname.bam -o output/test2 
./metaDMG-cpp refName: (null) minLength: 35 printLength: 5 runmode: 1 outname: output/test2 nthreads: 4
skipping: f570b1db7c_000000000023 too short, this msg is printed 2 times more 
skipping: f570b1db7c_000000000084 too short, this msg is printed 1 times more 
skipping: f570b1db7c_000000000084 too short, this msg is printed 0 times more 
	-> Will dump: 'output/test2.res.gz' this contains damage patterns for: 154 items
	-> Setting threads to: 4 
	-> Will dump: 'output/test2.bdamage.gz' this contains damage patterns for: 154 items
	-> Setting threads to: 4 
	-> Outputting overall statistic in file: "output/test2.stat"
pos	A>C	A>G	A>T	C>A	C>G	C>T	G>A	G>C	G>T	T>A	T>C	T>G
0	0.00000	0.01639	0.00000	0.00000	0.03333	0.10000	0.01190	0.04762	0.01190	0.00000	0.00000	0.00000
1	0.00000	0.01818	0.01818	0.00000	0.06667	0.03810	0.02941	0.01961	0.00980	0.01724	0.00000	0.01724
2	0.03390	0.03390	0.00000	0.00971	0.03883	0.00000	0.01887	0.02830	0.00000	0.00000	0.01923	0.00000
3	0.00000	0.01887	0.00000	0.00000	0.01075	0.02151	0.01887	0.01887	0.00943	0.00000	0.02941	0.00000
4	0.00000	0.02564	0.00000	0.00000	0.05882	0.01681	0.01942	0.00971	0.00000	0.00000	0.03390	0.01695
pos	A>C	A>G	A>T	C>A	C>G	C>T	G>A	G>C	G>T	T>A	T>C	T>G
0	0.00000	0.01220	0.01220	0.02885	0.01923	0.03846	0.01176	0.01176	0.00000	0.00000	0.02041	0.02041
1	0.00000	0.05263	0.00000	0.01961	0.06863	0.02941	0.00917	0.04587	0.01835	0.00000	0.00000	0.01923
2	0.00000	0.01923	0.00000	0.00000	0.01031	0.03093	0.00000	0.01667	0.00833	0.00000	0.00000	0.00000
3	0.00000	0.05128	0.00000	0.00000	0.02326	0.00000	0.00000	0.02000	0.00000	0.00000	0.01786	0.00000
4	0.00000	0.00000	0.00000	0.01020	0.02041	0.02041	0.02913	0.06796	0.00000	0.02041	0.02041	0.00000
#../metaDMG-cpp lca -bam ./data/f570b1db7c.dedup.filtered.rname.bam -names data/names.dmp.gz -nodes data/nodes.dmp.gz -acc2tax data/acc2taxid.map.gz -simscorelow 0.9 -simscorehigh 1.0 -editdistmin 0 -editdistmax 10 -minmapq 0 -howmany 35 -weighttype 1 -fix_ncbi 0 -out output/test3 
	-> Will output lca results in file:		'output/test3.lca.gz'
	-> [thread1] Will read header
	-> [thread1] Done reading header: 0.00 sec, header contains: 154 
	-> Will output lca distribution in file:		'output/test3.stat'
	-> Will output lca weight in file:		'output/test3.wlca'
	-> Will output log info (problems) in file:	'output/test3.log'
	-> -bam  	./data/f570b1db7c.dedup.filtered.rname.bam
	-> -names	data/names.dmp.gz
	-> -nodes	data/nodes.dmp.gz
	-> -acc2tax	data/acc2taxid.map.gz
	-> -simscoreLow	0.900000
	-> -simscoreHigh	1.000000
	-> -editdistMin	0
	-> -editdistMax	10
	-> -outnames	output/test3
	-> -minmapq	0
	-> -lca_rank	species
	-> -norank2species	0
	-> -howmany	35
	-> -fix_ncbi	0
	-> -weighttype	1
	-> Starting to extract (acc->taxid) from binary file: 'data/acc2taxid.map.gz'
	-> Checking if exits: 'acc2taxid.map.gzf570b1db7c.dedup.filtered.rname.bam.bin'
	-> Checking if bimnary file exists. dodump=0 
	-> opening file: 'acc2taxid.map.gzf570b1db7c.dedup.filtered.rname.bam.bin' mode: 'rb'
	-> Setting threads to: 4 
	-> Number of entries to use from accesion to taxid: 154, time taken: 0.00 sec
	-> [data/names.dmp.gz] Number of unique names (column1): 152066 with third column 'scientific name'
	-> Number of unique names (column1): 152066 from file: data/nodes.dmp.gz parent.size():152066 child.size():0
	-> Number of entries with level information: 48 
[hts] 	-> editMin:0 editmMax:10 scoreLow:0.900000 scoreHigh:1.000000 minlength:-1 discard: 516 prefix: output/test3 howmany: 35 skipnorank: 1 weighttype: 1
	-> Will dump: 'output/test3.bdamage.gz' this contains damage patterns for: 152 items
	-> Setting threads to: 4 
	-> Number of species with reads that map uniquely: 152
#../metaDMG-cpp lca -bam ./data/f570b1db7c.dedup.filtered.rname.bam -names data/names.dmp.gz -nodes data/nodes.dmp.gz -acc2tax data/acc2taxid.map.gz -simscorelow 0.9 -simscorehigh 1.0 -editdistmin 0 -editdistmax 10 -minmapq 0 -howmany 35 -weighttype 1 -fix_ncbi 0 -out output/test4 
	-> Will output lca results in file:		'output/test4.lca.gz'
	-> [thread1] Will read header
	-> [thread1] Done reading header: 0.00 sec, header contains: 154 
	-> Will output lca distribution in file:		'output/test4.stat'
	-> Will output lca weight in file:		'output/test4.wlca'
	-> Will output log info (problems) in file:	'output/test4.log'
	-> -bam  	./data/f570b1db7c.dedup.filtered.rname.bam
	-> -names	data/names.dmp.gz
	-> -nodes	data/nodes.dmp.gz
	-> -acc2tax	data/acc2taxid.map.gz
	-> -simscoreLow	0.900000
	-> -simscoreHigh	1.000000
	-> -editdistMin	0
	-> -editdistMax	10
	-> -outnames	output/test4
	-> -minmapq	0
	-> -lca_rank	species
	-> -norank2species	0
	-> -howmany	35
	-> -fix_ncbi	0
	-> -weighttype	1
	-> Starting to extract (acc->taxid) from binary file: 'data/acc2taxid.map.gz'
	-> Checking if exits: 'acc2taxid.map.gzf570b1db7c.dedup.filtered.rname.bam.bin'
	-> Checking if bimnary file exists. dodump=0 
	-> opening file: 'acc2taxid.map.gzf570b1db7c.dedup.filtered.rname.bam.bin' mode: 'rb'
	-> Setting threads to: 4 
	-> Number of entries to use from accesion to taxid: 154, time taken: 0.00 sec
	-> [data/names.dmp.gz] Number of unique names (column1): 152066 with third column 'scientific name'
	-> Number of unique names (column1): 152066 from file: data/nodes.dmp.gz parent.size():152066 child.size():0
	-> Number of entries with level information: 48 
[hts] 	-> editMin:0 editmMax:10 scoreLow:0.900000 scoreHigh:1.000000 minlength:-1 discard: 516 prefix: output/test4 howmany: 35 skipnorank: 1 weighttype: 1
	-> Will dump: 'output/test4.bdamage.gz' this contains damage patterns for: 152 items
	-> Setting threads to: 4 
	-> Number of species with reads that map uniquely: 152
#../metaDMG-cpp print output/test1.bdamage.gz 
infile: output/test1.bdamage.gz inbam: (null) search: -1 ctga: 0 countout: 0 nodes: (null) names: (null) howmany: 15
	-> printlength(howmany) from inputfile: 5
#../metaDMG-cpp print output/test2.bdamage.gz 
infile: output/test2.bdamage.gz inbam: (null) search: -1 ctga: 0 countout: 0 nodes: (null) names: (null) howmany: 15
	-> printlength(howmany) from inputfile: 5
#../metaDMG-cpp print_ugly output/test3.bdamage.gz 
./metaDMG-cpp print_ugly file.bdamage.gz -names file.gz -nodes trestructure.gz -lcastat fil.gz
	-> Dumping file: 'output/test3.bdamage.gz.uglyprint.mismatch.txt.gz'
	-> Done loading binary bdamage.gz file. It contains: 152
	-> Number of entries in damage pattern file: 152 printlength(howmany):35
	-> pre: 152.000000 post:153.000000 grownbyfactor: 1.006579
	-> Dumping file: 'output/test3.bdamage.gz.uglyprint.stat.txt.gz'
#../metaDMG-cpp print_ugly output/test4.bdamage.gz -names data/names.dmp.gz -nodes data/nodes.dmp.gz -lcastat output/test4.stat 
./metaDMG-cpp print_ugly file.bdamage.gz -names file.gz -nodes trestructure.gz -lcastat fil.gz
	-> Dumping file: 'output/test4.bdamage.gz.uglyprint.mismatch.txt.gz'
	-> Number of unique names (column1): 152066 from file: data/nodes.dmp.gz parent.size():152066 child.size():32830
	-> Done loading binary bdamage.gz file. It contains: 152
	-> Number of entries in damage pattern file: 152 printlength(howmany):35
	-> [data/names.dmp.gz] Number of unique names (column1): 152066 with third column 'scientific name'
	-> pre: 152.000000 post:152066.000000 grownbyfactor: 1000.434204
	-> Dumping file: 'output/test4.bdamage.gz.uglyprint.stat.txt.gz'
	-> Done loading lcastat file It contains: 152
